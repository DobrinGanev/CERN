{"version":3,"sources":["webpack:///../server/server.js?1d73"],"names":["require","config","routes","server","listen","port","error","console","log","get","req","res","data","push","message","setTimeout","send","envset","production","process","env","NODE_ENV","hostname","HOSTNAME","store","initialState","getState","use","next","location","url","redirectLocation","renderProps","redirect","pathname","search","reactString","renderToString","webserver","__PRODUCTION__","output","JSON","stringify","module","hot","accept","addStatusHandler","status","exit"],"mappings":";;;;;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AAKA;;;;AACA;;AAGA;;;;AACA;;;;AACA;;;;AACA;;;;AAjBA,oBAAAA,CAAQ,EAAR,EAAkBC,MAAlB;;AAoBA,KAAIC,yBAAJ;;AAEA,KAAMC,SAAS,wBAAf;AACAA,QAAOC,MAAP,CAAc,iBAAaC,IAA3B,EAAiC,UAACC,KAAD,EAAW;AAC1C,OAAI,CAACA,KAAL,EAAY;AACVC,aAAQC,GAAR,+BAAwC,iBAAaH,IAArD,oCADU,CACiF;AAC5F;AACF,EAJD;;AAMA;;;;;AAKA;;AAEA;AACAF,QAAOM,GAAP,CAAW,QAAX,EAAqB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACtC,OAAIC,OAAO,EAAX;AACAA,QAAKC,IAAL,CAAU;AACNC,cAAS;AADH,IAAV;AAGE;AACFC,cAAW,YAAW;AACpBJ,SAAIK,IAAJ,CAASJ,IAAT;AACD,IAFD,EAEG,IAFH;AAID,EAVD;;AAYA,KAAIK,SAAS;AACXC,eAAYC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB;AAD1B,EAAb;AAGA,KAAMC,WAAWL,OAAOC,UAAP,GAAqBC,QAAQC,GAAR,CAAYG,QAAZ,IAAwBJ,QAAQ,KAAR,EAAeI,QAA5D,GAAwE,WAAzF;;AAEA;;;AAGA,KAAMC,QAAQ,sBAAd;AACA,KAAMC,eAAeD,MAAME,QAAN,EAArB;AACAvB,QAAOwB,GAAP,CAAW,UAASjB,GAAT,EAAcC,GAAd,EAAmBiB,IAAnB,EAAyB;AAClC,2BAAM,EAAE1B,cAAF,EAAS2B,UAAUnB,IAAIoB,GAAvB,EAAN,EAAmC,UAACxB,KAAD,EAAQyB,gBAAR,EAA0BC,WAA1B,EAA0C;AAC3E,SAAID,gBAAJ,EAAsB;AACpBpB,WAAIsB,QAAJ,CAAaF,iBAAiBG,QAAjB,GAA4BH,iBAAiBI,MAA1D;AACA;AACD;AACD,SAAI7B,SAAS,CAAC0B,WAAd,EAA2B;AACzBJ;AACA;AACD;AACD,SAAMQ,cAAc,iBAASC,cAAT,CAClB;AAAA;AAAA,SAAU,OAAQb,KAAlB;AACE,iEAAmBQ,WAAnB;AADF,MADkB,CAApB;AAKA,SAAMM,YAAY,MAAAC,GAAiB,EAAjB,UAA2BjB,QAA3B,UAAlB;AACAf,aAAQC,GAAR,CAAY8B,SAAZ;;AAEA,SAAIE,8JAOcF,SAPd,4EAQ6BA,SAR7B,yNAYmBF,WAZnB,uEAc0BK,KAAKC,SAAL,CAAejB,YAAf,CAd1B,iDAgBUa,SAhBV,uDAiBcA,SAjBd,6FAAJ;AAqBA3B,SAAIK,IAAJ,CAASwB,MAAT;AACD,IAvCD;AAwCD,EAzCD;;AA2CA,KAAI,IAAJ,EAAa;AACX,OAAI,IAAJ,EAAgB;AACdjC,aAAQC,GAAR,CAAY,uCAAZ;;AAEAmC,YAAOC,GAAP,CAAWC,MAAX,CAAkB,EAAlB,EAAsC,YAAM;AAC1C3C,gBAAS,mBAAAF,CAAQ,EAAR,CAAT;AACD,MAFD;;AAIA2C,YAAOC,GAAP,CAAWE,gBAAX,CAA4B,UAACC,MAAD,EAAY;AACtC,WAAIA,WAAW,OAAf,EAAwB;AACtBhC,oBAAW;AAAA,kBAAMI,QAAQ6B,IAAR,CAAa,CAAb,CAAN;AAAA,UAAX,EAAkC,CAAlC;AACD;AACF,MAJD;AAKD;AACF,E","file":"0.89e2887e742d0c4aa99e.hot-update.js","sourcesContent":["require('dotenv').config()\nimport express from 'express'\nimport babelPolyfill from \"babel-polyfill\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom/server\";\nimport {\n  RouterContext,\n  match,\n  createMemoryHistory\n} from \"react-router\";\nimport configureStore from \"../client/store.js\";\nimport {\n  Provider\n} from 'react-redux';\nimport routesContainer from \"../client/routes\";\nimport url from \"url\";\nimport serverConfig from '../config';\nimport {\n  cassandra\n} from '../cassandra/common/cassandra';\nlet routes = routesContainer;\n\nconst server = express()\nserver.listen(serverConfig.port, (error) => {\n  if (!error) {\n    console.log(`CERN is running on port: ${serverConfig.port}! Build something disruptive!`); // eslint-disable-line\n  }\n});\n\n/*\nSample schema\nhttps://github.com/pmcfadin/cassandra-videodb-sample-schema\n * @param {singleton cassandra client instance} cassandra.\n*/\n// require(\"../cassandra/sampleData/examples/videodb/videodb-schema\")(cassandra);\n\n//test\nserver.get('/hello', function(req, res) {\n  var data = [];\n  data.push({\n      message: \"Updated message from server: Hello world from  the server\"\n    })\n    //for effect to see the update of the state\n  setTimeout(function() {\n    res.send(data);\n  }, 3000)\n\n});\n\nvar envset = {\n  production: process.env.NODE_ENV === 'production'\n};\nconst hostname = envset.production ? (process.env.HOSTNAME || process['env'].HOSTNAME) : \"localhost\";\n\n/**\n * Create Redux store, and get intitial state.\n */\nconst store = configureStore();\nconst initialState = store.getState();\nserver.use(function(req, res, next) {\n  match({ routes,location: req.url}, (error, redirectLocation, renderProps) => {\n    if (redirectLocation) {\n      res.redirect(redirectLocation.pathname + redirectLocation.search);\n      return;\n    }\n    if (error || !renderProps) {\n      next();\n      return;\n    }\n    const reactString = ReactDOM.renderToString(\n      <Provider store ={store}>\n        <RouterContext {...renderProps}/>\n      </Provider>\n    );\n    const webserver = __PRODUCTION__ ? \"\" : `//${hostname}:8080`;\n    console.log(webserver);\n\n    let output = (\n   `<!doctype html>\n\t\t<html lang=\"en-us\">\n\t\t\t<head>\n\t\t\t\t<meta charset=\"utf-8\">\n\t\t\t\t<title>\n         </title>\n         <link href=${webserver}/dist/main.css rel=stylesheet/>\n         <link rel=stylesheet href=${webserver}/node_modules/material-design-lite/material.min.css>\n         <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/icon?family=Material+Icons\">\n\t\t\t</head>\n\t\t\t<body>\n\t\t\t\t<div id=\"react-root\">${reactString}</div>\n\t\t\t\t<script>\n\t\t\t\t\twindow.__INITIAL_STATE__ = ${JSON.stringify(initialState)}\n\t\t\t\t</script>\n\t\t\t\t<script src=${webserver}/dist/client.js></script>\n        <script src=${webserver}/node_modules/material-design-lite/material.min.js></script>\n\t\t\t</body>\n\t\t</html>`\n    );\n    res.send(output);\n  });\n});\n\nif (__DEV__) {\n  if (module.hot) {\n    console.log(\"[HMR] Waiting for server-side updates\");\n\n    module.hot.accept(\"../client/routes\", () => {\n      routes = require(\"../client/routes\");\n    });\n\n    module.hot.addStatusHandler((status) => {\n      if (status === \"abort\") {\n        setTimeout(() => process.exit(0), 0);\n      }\n    });\n  }\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ../server/server.js\n **/"],"sourceRoot":""}